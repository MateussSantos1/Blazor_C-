@page "/categoria/delete"
@inject Crud_Blazor_EF.Data.AppDbContext DB
@using Crud_Blazor_EF.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Categoria</h4>
    <hr />
    @if (categoria is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Titulo</dt>
            <dd class="col-sm-10">@categoria.Titulo</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Descricao</dt>
            <dd class="col-sm-10">@categoria.Descricao</dd>
        </dl>
        <EditForm method="post" Model="categoria" OnValidSubmit="DeleteCategoria" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(categoria is null)">Delete</button> |
            <a href="/categoria">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Categoria? categoria;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        categoria = await DB.Categorias.FirstOrDefaultAsync(m => m.Id == Id);

        if (categoria is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteCategoria()
    {
        DB.Categorias.Remove(categoria!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/categoria");
    }
}
